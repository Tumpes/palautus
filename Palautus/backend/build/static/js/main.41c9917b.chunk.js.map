{"version":3,"sources":["services/persons.js","services/notification.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","tiedot","post","id","put","delete","Notification","message","type","console","log","className","Filter","props","onChange","handleFilterChange","Nimi","name","number","onClick","window","confirm","nameService","then","response","setNotification","setNotificationType","setTimeout","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","Persons","undefined","filteredNames","map","App","useState","persons","setPersons","setNewName","setNewNumber","setFilteredNames","notification","notificationType","useEffect","data","event","filter","target","e","toLowerCase","includes","preventDefault","length","newPerson","Object","keys","find","personObject","catch","error","key","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41c9917b.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl);\r\n};\r\n\r\nconst create = (tiedot) => {\r\n  return axios.post(baseUrl, tiedot);\r\n};\r\n\r\nconst update = (id, tiedot) => {\r\n  return axios.put(`${baseUrl}/${id}`, tiedot);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nexport default { getAll, create, update, remove };\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, type }) => {\r\n    console.log(message, type)\r\n  if (message === \"undefined\" || message === null) {\r\n    return null;\r\n  }\r\n\r\n  if (type === \"error\") {\r\n    return <div className=\"error\">{message}</div>;\r\n  } else {\r\n    return <div className=\"success\">{message}</div>;\r\n  }\r\n};\r\n\r\nexport default Notification;\r\n","import react from \"react\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport nameService from \"./services/persons\";\nimport Notification from \"./services/notification\";\n\nconst Filter = (props) => {\n  return (\n    <p>\n      Filter: <input onChange={props.handleFilterChange} />\n    </p>\n  );\n};\n\nconst Nimi = (props) => {\n  console.log(props);\n  const deleteHandler = (id) => {\n    console.log(props);\n    if (window.confirm(`delete ${props.name.name}?`)) {\n      nameService\n        .remove(props.name.id)\n        .then((response) => console.log(response));\n      props.setNotification(`henkilö ${props.name.name} poistettu.`);\n      props.setNotificationType(\"success\");\n      setTimeout(() => {\n        props.setNotification(null);\n      }, 5000);\n    }\n  };\n\n  return (\n    <li>\n      {props.name.name + \" \" + props.name.number}\n      <button onClick={() => deleteHandler(props.id)}> delete </button>\n    </li>\n  );\n};\n\nconst PersonForm = ({\n  addName,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange,\n}) => {\n  return (\n    <form onSubmit={addName}>\n      <div>\n        Name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        Number:\n        <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <button type=\"submit\">save</button>\n    </form>\n  );\n};\n\nconst Persons = (props) => {\n  if (props.filteredNames === undefined) return null;\n  return (\n    <ul>\n      {props.filteredNames.map((name, id) => (\n        <props.Nimi\n          name={name}\n          key={name.name}\n          id={id}\n          setNotification={props.setNotification}\n          setNotificationType={props.setNotificationType}\n        />\n      ))}\n    </ul>\n  );\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filteredNames, setFilteredNames] = useState(persons);\n  const [notification, setNotification] = useState(null);\n  const [notificationType, setNotificationType] = useState(\"\");\n\n  useEffect(() => {\n    console.log(nameService.getAll());\n    nameService.getAll().then((response) => {\n      setFilteredNames(response.data);\n      setPersons(response.data);\n    });\n  }, []);\n\n  const handleFilterChange = (event) => {\n    const filter = event.target.value;\n    console.log(filter);\n    if (filter === null || filter === \"\") {\n      setFilteredNames(persons);\n    } else {\n      setFilteredNames(\n        persons.filter((e) => e.name.toLowerCase().includes(filter))\n      );\n      console.log(filteredNames);\n    }\n  };\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value);\n    setNewNumber(event.target.value);\n  };\n\n  const addName = (event) => {\n    event.preventDefault();\n    if (persons.filter((e) => e.name === newName).length !== 0) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        console.log(persons);\n        const newPerson = {\n          ...persons[\n            Object.keys(persons).find((e) => persons[e].name === newName)\n          ],\n        };\n        console.log(newPerson.id);\n        const personObject = { ...newPerson, number: newNumber };\n        nameService\n          .update(newPerson.id, personObject)\n          .then((response) => {\n            console.log(response.data.number);\n            setNewNumber(response.data.number);\n            setNotification(\n              `henkilön ${newName} numero vaihdettu numeroon ${newNumber}`\n            );\n            setNotificationType(\"success\"); // tämäkään ei päivity\n            setTimeout(() => {\n              setNotification(null);\n            }, 5000);\n          })\n          .catch((error) => {\n            setNotification(\n              `${newPerson.name} has been removed from the server.`\n            );\n            setNotificationType(\"error\");\n            setTimeout(() => {\n              setNotification(null);\n            }, 5000);\n          });\n      }\n    } else {\n      const tiedot = {\n        name: newName,\n        number: newNumber,\n        key: newName,\n        id: persons.length + 1,\n      };\n      console.log(persons.concat(tiedot));\n      nameService.create(tiedot).then((response) => {\n        setPersons(persons.concat(response.data));\n        setFilteredNames(filteredNames.concat(response.data));\n        setNewName(\"\");\n        setNotification(`henkilö ${newName} lisätty.`);\n        setNotificationType(\"success\");\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} type={notificationType} />\n      <Filter handleFilterChange={handleFilterChange} />\n      <h1> add new person </h1>\n      <PersonForm\n        addName={addName}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        filteredNames={filteredNames}\n        setFilteredNames={setFilteredNames}\n        Nimi={Nimi}\n        setNotification={setNotification}\n        setNotificationType={setNotificationType}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}